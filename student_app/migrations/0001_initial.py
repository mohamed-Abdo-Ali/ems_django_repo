# Generated by Django 5.2.5 on 2025-09-05 14:51

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="StudentEssayAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("answer_text", models.TextField(verbose_name="إجابة الطالب")),
                (
                    "attempt_number",
                    models.PositiveIntegerField(
                        default=1, editable=False, verbose_name="رقم المحاولة"
                    ),
                ),
                (
                    "submitted_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="وقت التسليم"),
                ),
            ],
            options={
                "verbose_name": "إجابة طالب مقالية",
                "verbose_name_plural": "إجابات الطلاب المقالية",
                "ordering": ["question", "attempt_number"],
            },
        ),
        migrations.CreateModel(
            name="StudentExamAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "attempt_number",
                    models.PositiveIntegerField(
                        default=1,
                        editable=False,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="رقم المحاولة",
                    ),
                ),
                (
                    "start_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="وقت بداية المحاولة"
                    ),
                ),
                (
                    "end_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="وقت نهاية المحاولة"
                    ),
                ),
                (
                    "student_notes",
                    models.TextField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="ملاحظات الطالب",
                    ),
                ),
                (
                    "objective_score",
                    models.PositiveIntegerField(
                        default=0, verbose_name="درجة الأسئلة متعدد الخيارات"
                    ),
                ),
                (
                    "numeric_score",
                    models.PositiveIntegerField(
                        default=0, verbose_name="درجة الأسئلة العددية"
                    ),
                ),
                (
                    "essay_score",
                    models.PositiveIntegerField(
                        default=0, verbose_name="درجة الأسئلة المقالية"
                    ),
                ),
                (
                    "true_false_score",
                    models.PositiveIntegerField(
                        default=0, verbose_name="درجة أسئلة الصح والخطأ"
                    ),
                ),
                (
                    "total_score",
                    models.PositiveIntegerField(
                        default=0, verbose_name="الدرجة الكلية"
                    ),
                ),
                (
                    "is_submitted",
                    models.BooleanField(default=False, verbose_name="تم التسليم"),
                ),
            ],
            options={
                "verbose_name": "محاولة امتحان الطالب",
                "verbose_name_plural": "محاولات امتحانات الطلاب",
                "ordering": ["attendance", "attempt_number"],
            },
        ),
        migrations.CreateModel(
            name="StudentMultipleChoiceQuestionAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "attempt_number",
                    models.PositiveIntegerField(
                        default=1, editable=False, verbose_name="رقم المحاولة للسؤال"
                    ),
                ),
                (
                    "is_correct",
                    models.BooleanField(
                        default=False, editable=False, verbose_name="الإجابة صحيحة"
                    ),
                ),
                (
                    "awarded_mark",
                    models.PositiveIntegerField(
                        default=0, editable=False, verbose_name="الدرجة المحتسبة"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="وقت المحاولة"
                    ),
                ),
            ],
            options={
                "verbose_name": "محاولة سؤال متعدد الخيارات",
                "verbose_name_plural": "محاولات الأسئلة متعدد الخيارات",
                "ordering": ["question", "attempt_number"],
            },
        ),
        migrations.CreateModel(
            name="StudentNumericAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "student_answer",
                    models.FloatField(verbose_name="إجابة الطالب الرقمية"),
                ),
                (
                    "obtained_mark",
                    models.FloatField(
                        default=0, editable=False, verbose_name="الدرجة المستحقة"
                    ),
                ),
                (
                    "attempt_number",
                    models.PositiveIntegerField(
                        default=1, editable=False, verbose_name="رقم المحاولة"
                    ),
                ),
                (
                    "submitted_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="وقت التسليم"),
                ),
            ],
            options={
                "verbose_name": "إجابة طالب عددية",
                "verbose_name_plural": "إجابات الطلاب العددية",
                "ordering": ["question", "attempt_number"],
            },
        ),
        migrations.CreateModel(
            name="StudentTrueFalseQutionAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "attempt_number",
                    models.PositiveIntegerField(
                        default=1, editable=False, verbose_name="رقم المحاولة للسؤال"
                    ),
                ),
                (
                    "is_correct",
                    models.BooleanField(
                        default=False, editable=False, verbose_name="الإجابة صحيحة"
                    ),
                ),
                (
                    "awarded_mark",
                    models.PositiveIntegerField(
                        default=0, editable=False, verbose_name="الدرجة المحتسبة"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="وقت المحاولة"
                    ),
                ),
            ],
            options={
                "verbose_name": "إحابات سؤال صح و خطاء",
                "verbose_name_plural": "إجابات الأسئلة صح و خطاء",
                "ordering": ["question", "attempt_number"],
            },
        ),
    ]
